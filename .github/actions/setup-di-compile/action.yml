name: "Magento 2 code installation and compilation test"
author: "MagenX"
description: "Check if composer installation with setup-di-compile works without errors"

inputs:
  composer_install:
    description: 'Enable composer installation'
    required: true
    default: true
  composer_auth:
    description: 'Composer auth'
    required: true
  composer_install_options:
    description: 'Additional composer installation options'
    required: false
    default: ''
  composer_autoload_options:
    description: 'Additional composer autoload options'
    required: false
    default: ''
  setup_compile_options:
    description: 'Additional Magento compile options'
    required: false
    default: ''
  static_content_deploy:
    description: 'Enable Magento static content deploy command'
    required: false
    default: false
  static_content_deploy_options:
    description: 'Additional Magento static deploy parameters'
    required: false
    default: ''
  hyva_theme:
    description: 'Enable HyvaTheme css build command'
    required: false
    default: false
  hyva_theme_path:
    description: 'Path to HyvaTheme directory'
    required: false
    default: ''
  debug_command:
    description: 'Additional Magento command debug options'
    required: false
    default: ''

outputs:
  composer_install_status:
    description: "The status of composer install step"
    value: ${{ steps.composer-install.outputs.composer_install_status }}
  composer_autoload_status:
    description: "The status of composer autoload step"
    value: ${{ steps.composer-autoload.outputs.composer_autoload_status }}
  setup_di_compile_status:
    description: "The status of compilation step"
    value: ${{ steps.setup-di-compile.outputs.setup_di_compile_status }}
  hyva_theme_status:
    description: "The status of hyva theme generation step"
    value: ${{ steps.hyva-theme.outputs.hyva_theme_status }}
  static_content_deploy_status:
    description: "The status of static content deploy step"
    value: ${{ steps.static-content-deploy.outputs.static_content_deploy_status }}
  debug_status:
    description: "The status of debug step"
    value: ${{ steps.debug.outputs.debug_status }}
  
runs:
  using: "composite"
  steps:
    - name: Composer install modules and updates
      id: composer-install
      if: ${{ inputs.composer_install == 'true' }}
      env:
        COMPOSER_AUTH: ${{ inputs.composer_auth }}
      shell: bash
      run: |
        composer install ${{ inputs.composer_install_options }}
        [ $? -eq 0 ] && echo "composer_install_status=success" >> $GITHUB_OUTPUT || echo "composer_install_status=failure" >> $GITHUB_OUTPUT

    - name: Run setup di compile
      id: setup-di-compile
      shell: bash
      run: |
        bin/magento setup:di:compile -n ${{ inputs.setup_compile_options }}
        [ $? -eq 0 ] && echo "setup_di_compile_status=success" >> $GITHUB_OUTPUT || echo "setup_di_compile_status=failure" >> $GITHUB_OUTPUT

    - name: Composer classmap optimization
      id: composer-autoload
      shell: bash
      run: |
        composer dump-autoload ${{ inputs.composer_autoload_options }}
        [ $? -eq 0 ] && echo "composer_autoload_status=success" >> $GITHUB_OUTPUT || echo "composer_autoload_status=failure" >> $GITHUB_OUTPUT

    - name: Generate Hyva Theme css
      id: hyva-theme
      if: ${{ inputs.hyva_theme == 'true' }}
      shell: bash
      run: |
        npm --prefix ${{ inputs.hyva_theme_path }} run build-prod
        [ $? -eq 0 ] && echo "hyva_theme_status=success" >> $GITHUB_OUTPUT || echo "hyva_theme_status=failure" >> $GITHUB_OUTPUT

    - name: Generate static files
      id: static-content-deploy
      if: ${{ inputs.static_content_deploy == 'true' }}
      shell: bash
      run: |
        bin/magento setup:static-content:deploy -f -n ${{ inputs.static_content_deploy_options }}
        [ $? -eq 0 ] && echo "static_content_deploy_status=success" >> $GITHUB_OUTPUT || echo "static_content_deploy_status=failure" >> $GITHUB_OUTPUT

    - name: Debug with custom output
      id: debug
      shell: bash
      run: |
        ${{ inputs.debug_command }}
        [ $? -eq 0 ] && echo "debug_status=success" >> $GITHUB_OUTPUT || echo "debug_status=failure" >> $GITHUB_OUTPUT


