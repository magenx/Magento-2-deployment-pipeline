name: "Magento 2 code compilation test"
author: "MagenX"
description: "Check if setup-di-compile works without errors"

inputs:
  composer_auth:
    description: 'Composer auth'
    required: true
  composer_options:
    description: 'Additional composer options'
    required: false
    default: ''
  setup_compile_options:
    description: 'Additional Magento compile options'
    required: false
    default: ''
  static_content_deploy:
    description: 'Enable Magento static content deploy command'
    required: false
    default: false
  static_content_deploy_options:
    description: 'Additional Magento static deploy parameters'
    required: false
    default: ''
  debug_command:
    description: 'Additional Magento command debug options'
    required: false
    default: ''

outputs:
  composer-install:
    description: "The status of composer install step"
    value: ${{ steps.composer-install.outputs.status }}
  setup-di-compile:
    description: "The status of compilation step"
    value: ${{ steps.setup-di-compile.outputs.status }}
  static-content-deploy:
    description: "The status of static content deploy step"
    value: ${{ steps.static-content-deploy.outputs.status }}
  debug:
    description: "The status of debug step"
    value: ${{ steps.debug.outputs.status }}
  
runs:
  using: "composite"
  steps:
    - name: Composer install modules and updates
      id: composer-install
      env:
        COMPOSER_AUTH: ${{ inputs.composer_auth }}
      shell: bash
      run: |
        composer install --no-dev --no-interaction ${{ inputs.composer_options }}

    - name: Run setup di compile
      id: setup-di-compile
      shell: bash
      run: |
        bin/magento setup:di:compile -n ${{ inputs.setup_compile_options }}

    - name: Generate static files
      id: static-content-deploy
      if: ${{ inputs.static_content_deploy == 'true' }}
      shell: bash
      run: |
        bin/magento setup:static-content:deploy -f -n ${{ inputs.static_content_deploy_options }}

    - name: Debug with custom output
      id: debug
      shell: bash
      run: |
        ${{ inputs.debug_command }}
