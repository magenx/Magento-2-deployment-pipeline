name: Composer outdated

on:
  schedule:
    - cron: '0 5 * * 0'
  workflow_dispatch:

jobs:
  composer-outdated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest tag
        id: checkout-latest-tag
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          ref: main
          fetch-depth: 0
          
      - name: Create composer cache
        id: create-composer-cache
        uses: ./.github/actions/composer-cache

      - name: Composer install modules
        id: composer-install
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: |
          composer install --no-dev --no-ansi --no-interaction --no-progress --no-suggest
          
      - name: Check composer outdated packages
        id: composer-outdated
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: |
          composer outdated --direct --format=json > outdated.json
          echo "text=$(jq -r '.installed[] | select(.version != .latest) | "- \(.name)@\(.version) → \(.latest)"' outdated.json)" >> $GITHUB_OUTPUT

      - name: Set current date
        id: date
        run: echo "date=$(date +%Y-%m-%d-%H:%M)" >> $GITHUB_OUTPUT

      - name: Find existing issue
        id: find-issues
        uses: actions-cool/issues-helper@50068f49b7b2b3857270ead65e2d02e4459b022c #v3.6.2
        with:
          actions: 'find-issues'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-creator: 'github-actions[bot]'
          issue-state: 'open'
          title-includes: 'Composer outdated modules check'
          labels: 'outdated'
          exclude-labels: 'overdue'

      - name: Process found issues
        id: found-issues
        run: |
          printf '%s' '${{ steps.find-issues.outputs.issues }}' > issues.txt
          ISSUE_NUMBERS=$(grep -oP '(?<=number":)\d+' issues.txt | paste -sd,)
          echo "issue_numbers=${ISSUE_NUMBERS}" >> $GITHUB_OUTPUT

      - name: Add labels
        id: issue-labeler
        if: ${{ steps.found-issues.outputs.issue_numbers != '' }}
        uses: actions-cool/issues-helper@50068f49b7b2b3857270ead65e2d02e4459b022c #v3.6.2
        with:
          actions: 'add-labels'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.found-issues.outputs.issue_numbers }}
          labels: 'overdue'

      - name: Create and maintain issue
        uses: actions-cool/issues-helper@50068f49b7b2b3857270ead65e2d02e4459b022c #v3.6.2
        id: issue
        with:
          actions: 'create-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Composer outdated modules check [${{ steps.date.outputs.date }}]'
          body: |
            ## ⚠️ Composer outdated modules:
            ${{ steps.composer-outdated.outputs.text }}
              
              
            generated on: [${{ steps.date.outputs.date }}]
            [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          labels: 'dependencies,module,outdated'
          assignees: ${{ github.repository_owner }}
          emoji: 'eyes'
