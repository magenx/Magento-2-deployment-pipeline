name: "Magento complete build"

on:
  release:
    types: [published]

env:
  PRELELEASE_TYPE: "alpha"

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    if: "${{ github.event.release.prerelease == true }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest tag
        id: checkout-latest-tag
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Composer cache
        id: composer-cache
        uses: ./.github/actions/composer-cache

      - name: Magento compilation setup:di:compile
        id: compile
        uses: ./.github/actions/setup-di-compile
        with:
          composer_auth: "${{ secrets.COMPOSER_AUTH }}"
          composer_install: "--no-ansi --no-dev --no-interaction --no-progress"
          composer_autoload: "--optimize --classmap-authoritative"
          setup_di_compile: "-n --no-ansi"
          static_content_deploy: "-f -n --no-ansi -j $(nproc)"
          debug_command: "bin/magento"

      - name: Call a security-scan action
        id: security-scan
        if: ${{ !cancelled() }}
        uses: ./.github/actions/security-scan

      - name: Set version for complete build
        id: set-build-version
        run: | 
          echo "ARTIFACT_NAME=release_$(date +%Y%m%d%H%M).tar.gz" >> ${GITHUB_ENV}

      - name: Package build into tar archive
        id: tar-archive
        run: | 
          tar --ignore-failed-read --warning=no-file-changed \
            -czf "${{ env.ARTIFACT_NAME }}" \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="app/etc/env.php" \
            --exclude="CHANGELOG*" \
            --exclude="${{ env.ARTIFACT_NAME }}" \
            .

      - name: Upload build artifact
        id: upload-artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}

      - name: Attach build to release assets
        id: upload-asset
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 #v2.3.2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: ${{ env.ARTIFACT_NAME }}
          
      - name: Construct status message for PR comment
        if: ${{ !cancelled() }}
        id: construct-comment
        run: |
          COMMENT=""
          declare -A job_icons=( ["success"]="🟢" ["failure"]="🔴" ["cancelled"]="⚫" )
          COMMENT+="${job_icons[${{ job.status }}]} BUILD STATUS: ${{ job.status }}\n\n"
          
          declare -A step_icons=( ["success"]="✔️" ["failure"]="❌" ["skipped"]="➖" ["cancelled"]="✖️" )
          COMMENT+="${step_icons[${{ steps.compile.outputs.composer_install }}]} Composer install ${{ steps.compile.outputs.composer_install }}\n"
          COMMENT+="${step_icons[${{ steps.compile.outputs.setup_di_compile }}]} Code compilation ${{ steps.compile.outputs.setup_di_compile }}\n"
          COMMENT+="${step_icons[${{ steps.compile.outputs.composer_autoload }}]} Composer autoload ${{ steps.compile.outputs.composer_autoload }}\n"
          COMMENT+="${step_icons[${{ steps.compile.outputs.hyva_theme }}]} Hyva theme generation ${{ steps.compile.outputs.hyva_theme }}\n"
          COMMENT+="${step_icons[${{ steps.compile.outputs.static_content_deploy }}]} Static content deploy ${{ steps.compile.outputs.static_content_deploy }}\n"
          COMMENT+="${step_icons[${{ steps.compile.outputs.debug }}]} Debug command ${{ steps.compile.outputs.debug }}\n"
          
          if [ "${{ job.status }}" == "success" ]; then
            COMMENT+="\n## Build and artifact details:\n"
            COMMENT+="- **ARTIFACT_ID**: ${{ steps.upload-artifact.outputs.artifact-id }}\n"
            COMMENT+="- **ARTIFACT_NAME**: ${{ env.ARTIFACT_NAME }}\n"
            COMMENT+="- **ARTIFACT_DIGEST**: ${{ steps.upload-artifact.outputs.artifact-digest }}\n"
            COMMENT+="- **ARTIFACT_URL**: ${{ steps.upload-artifact.outputs.artifact-url }}\n"
            COMMENT+="- **RUN_ID**: ${GITHUB_RUN_ID}\n"
            COMMENT+="- **RUN_URL**: https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}\n"
          fi
          
          COMMENT+="\n@${GITHUB_REPOSITORY_OWNER} Please review this PR.\n"
          
          echo -e "${COMMENT}" > comment.txt

      - name: Find PR for production release
        id: find-pr
        if: ${{ !cancelled() }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=$(gh pr list \
            --repo "${GITHUB_REPOSITORY}" \
            --state open \
            --label "autorelease: pending" \
            --search "-in:title ${PRELELEASE_TYPE}" \
            --json number \
            --limit 1 \
            --jq '.[0].number')
          echo "pr_number=$pr_number" >> ${GITHUB_OUTPUT}

      - name: Add status to PR for production release
        id: add-pr-comment
        if: ${{ !cancelled() }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          gh pr comment ${{ steps.find-pr.outputs.pr_number }} \
            --repo "${GITHUB_REPOSITORY}" \
            --body-file comment.txt

      - name: Trigger post-release workflow
        id: payload
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 #v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deployment
          client-payload: |-
            {
              "environment": "staging",
              "asset_name": "${{ env.ARTIFACT_NAME }}",
              "asset_digest": "${{ fromJSON(steps.upload-asset.outputs.assets)[0].digest }}",
              "tag_name": "${{ github.event.release.tag_name }}"
            }
