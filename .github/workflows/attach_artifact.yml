name: "Attach artifact to release"

on:
  release:
    types: [published]

env:
  PRELELEASE_TYPE: "alpha"
  ASSET_LABEL: "Magenx Cloud build"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  attach-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Find pre-release PR
        id: find-pr
        run: |
          pr=$(gh pr list \
            --repo "${GITHUB_REPOSITORY}" \
            --state merged \
            --label "autorelease: tagged" \
            --search "${PRELELEASE_TYPE} in:title" \
            --json number,mergedAt \
            | jq -r 'sort_by(.mergedAt) | reverse | .[0].number')
          echo "pr_number=$pr" >> ${GITHUB_OUTPUT}

      - name: Find artifact name in PR comment
        id: pr
        run: |
          comments=$(gh pr view ${{ steps.find-pr.outputs.pr_number }} \
            --repo "${GITHUB_REPOSITORY}" \
            --json comments \
            --jq '.comments')
          run_id=$(echo "$comments" \
            | jq -r '.[] | select(.body | contains("RUN_ID")) .body' \
            | grep -oP "RUN_ID.*: \K[0-9]+" | tail -n1)
          artifact_digest=$(echo "$comments" \
            | jq -r '.[] | select(.body | contains("ARTIFACT_DIGEST")) .body' \
            | grep -oP "ARTIFACT_DIGEST.*: \K[0-9]+" | tail -n1)
          artifact_name=$(echo "$comments" \
            | jq -r '.[] | select(.body | contains("ARTIFACT_NAME")) .body' \
            | grep -oP "ARTIFACT_NAME.*: \K[0-9].+\.gz" | tail -n1)
          echo "run_id=$run_id" >> ${GITHUB_OUTPUT}
          echo "artifact_name=$artifact_name" >> ${GITHUB_OUTPUT}
          echo "artifact_digest=$artifact_name" >> ${GITHUB_OUTPUT}

      - name: Download artifact
        id: download-artifact
        run: | 
          mkdir -p ./${{ steps.pr.outputs.run_id }}
          gh run download ${{ steps.pr.outputs.run_id }} \
            --repo "${GITHUB_REPOSITORY}" \
            --name ${{ steps.pr.outputs.artifact_name }} \
            --dir ./${{ steps.pr.outputs.run_id }}/

      - name: Attach artifact to release tag
        id: attach-artifact
        run: |
          gh --repo "${GITHUB_REPOSITORY}" release upload ${{ github.event.release.tag_name }} \
            ./${{ steps.pr.outputs.run_id }}/${{ steps.pr.outputs.artifact_name }}#${ASSET_LABEL}

      - name: Trigger post-release workflow
        id: payload
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 #v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: artifact
          client-payload: |-
            {
              "environment": "${{ github.event.release.prerelease && 'staging' || 'production' }}",
              "artifact_name": "${{ steps.pr.outputs.artifact_name }}",
              "artifact_digest": "${{ steps.pr.outputs.artifact_digest }}",
              "run_id": "${{ steps.pr.outputs.run_id }}",
              "pr_number": "${{ steps.find-pr.outputs.pr_number }}",
              "tag_name": "${{ github.event.release.tag_name }}"
            }
