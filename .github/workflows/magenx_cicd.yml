name: Magenx CI/CD

on:
  push:
    branches: 
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/workflows/**'

permissions:
  contents: write
  issues: write
  pull-requests: write
  repository-projects: read
  actions: read
  
env:
  PRERELEASE_TYPE: "alpha"
  PRERELEASE_CONFIG: ".github/.release-please-config-prerelease.json"
  PRERELEASE_MANIFEST: ".github/.release-please-manifest-prerelease.json"
  RELEASE_CONFIG: ".github/.release-please-config.json"
  RELEASE_MANIFEST: ".github/.release-please-manifest.json"

concurrency:
  group: release

jobs:

  pre-release-pr:
    name: Create pre-release PR
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Create pre-release
        id: release
        uses: googleapis/release-please-action@v4.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: ${{ env.PRERELEASE_CONFIG }}
          manifest-file: ${{ env.PRERELEASE_MANIFEST }}


  pre-release-validate:
    if: ${{ needs.pre-release-pr.outputs.releases_created == 'false' }}
    needs: pre-release-pr
    uses: ./.github/workflows/build.yml
    secrets:
      COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
      
  comment-on-pr:
    name: Find target PR and comment
    if: ${{ needs.pre-release-pr.outputs.releases_created == 'false' }}
    needs: pre-release-validate
    runs-on: ubuntu-latest
    steps:
      - name: Find pre-release target PR
        id: find-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr=$(gh pr list \
            --repo "$GITHUB_REPOSITORY" \
            --state open \
            --label "autorelease: pending" \
            --search "alpha in:title" \
            --json number \
            --limit 1 \
            --jq '.[0].number')
          echo "pr_number=$pr" >> ${GITHUB_OUTPUT}

      - name: Add comment to PR
        if: steps.find-pr.outputs.pr_number != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          COMMENT="
          Pre-release validation! ðŸš€

          **Build and artifact details:**
          - Artifact file name: ${{ needs.pre-release-validate.outputs.build_artifact }}
          - Artifact url: ${{ needs.pre-release-validate.outputs.build_artifact_url }}
          - Build run url: ${{ needs.pre-release-validate.outputs.build_run_url }}
          "
         
          gh pr comment ${{ steps.find-pr.outputs.pr_number }} --repo "$GITHUB_REPOSITORY" --body "$COMMENT"


  pre-release:
    name: Publish pre-release then release PR
    runs-on: ubuntu-latest
    if: ${{ needs.pre-release-pr.outputs.releases_created == 'true' && contains(needs.pre-release-pr.outputs.tag_name, 'alpha') }}
    needs: pre-release-pr
    steps:
      - name: Pre-release publishing
        run: |
          echo "Running pre-release"


      - name: Create release PR
        uses: googleapis/release-please-action@v4.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: ${{ env.RELEASE_CONFIG }}
          manifest-file: ${{ env.RELEASE_MANIFEST }}
          


  after-pre-release:
    name: After pre-release cleanup
    runs-on: ubuntu-latest
    needs: pre-release
    steps:
      - name: After pre-release cleanup
        run: |
          echo "Running after-pre-release cleanup"


  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ needs.pre-release-pr.outputs.releases_created == 'true' && !contains(needs.pre-release-pr.outputs.tag_name, 'alpha') }}
    needs: pre-release-pr
    steps:
      - name: Create release
        run: |
          echo "Create release"


  after-release:
    name: After release cleanup
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: After release cleanup
        run: |
          echo "After release cleanup"
